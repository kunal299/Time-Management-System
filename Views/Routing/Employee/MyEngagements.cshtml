<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Engagements</title>
    <script src="https://unpkg.com/ag-grid-community/dist/ag-grid-community.min.noStyle.js"></script>
    <!-- Include jQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js"></script>
</head>
<body>
    <h2 style="margin-top: 0px;">My Engagements</h2>
    <div id="myGrid" class="ag-theme-alpine" style="height: 400px; width: 98.5%;"></div>

    <script>
        const engagements = {};
        const helper = {};
        // Column definitions for the AG Grid
        const columnDefs = [
            { headerName: "#", field: "SerialNumber", flex:0.3 },
            { headerName: "Project", field: "title", flex:1 },
            { headerName: "Owners", field: "owners", flex:1 },
            { headerName: "Start Date", field: "startDate",valueFormatter: params => engagements.formatDate(params), flex:1 },
            { headerName: "End Date", field: "endDate",valueFormatter: params => engagements.formatDate(params), flex:1 },
            { headerName: "Team Members", field: "teamMembers", flex:1 }
        ];

        const gridOptions = {
            columnDefs: columnDefs,
            rowData: [],
        };

        helper.DateFormat1 = function (inDate) {
            var ret = dayjs(inDate).format('MM/DD/YYYY');
            return ret;

        }

        engagements.formatDate = function (params) {
            if (!params.value) return '';
            const date = new Date(params.value);
            if (isNaN(date)) return params.value;
            return helper.DateFormat1(params.value);
        };

        

        engagements.loadGrid = function() {
            var uid = @UserSession.GetUserId(Context);
            $.ajax({
                url: '/api/ManageEngagement/engagements/' + uid,
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        const gridData = response.map((item, index) => ({
                            SerialNumber: index + 1,
                            title: item.title,
                            owners: item.owners,
                            startDate: item.startDate,
                            endDate: item.endDate,
                            teamMembers: item.teamMembers
                        }))
                        console.log("Mapped grid data:", gridData);

                        gridOptions.api.applyTransaction({add: gridData});

                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching data:', status, error);
                    }
            })
        }
 
        // Initialize the grid
        $(document).ready(function() {
            const eGridDiv = document.querySelector('#myGrid');
            const gridApi = new agGrid.Grid(eGridDiv, gridOptions);
            engagements.loadGrid(); // Call to load the data after the grid is initialized
        });
    </script>
</body>
</html>
